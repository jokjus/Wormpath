mixin input(type, label, name, min=0, max, value='')
    div(class='ui-control')&attributes(attributes)
        label=label
            span(id=name + 'Val', data-type=type)
        input(id=name, type=type, value=value, min=min, max=max)

mixin section(label)
    .ui-section-label.section 
        span=label



mixin select(label, name, options=[], myclass='', mymainclass='ui-control')
    div(class=mymainclass)&attributes(attributes)
        label=label
            span(id=name + 'Val')
        select(id=name, class=myclass)
            each myOption in options
                if myOption.selected
                    option(value=myOption.value data-col=myOption.col selected)=myOption.label
                else
                    option(value=myOption.value data-col=myOption.col)=myOption.label


doctype html
html
  head
    meta(charset='UTF-8')
    title WormPath
    link(rel='stylesheet' href='style.css')
    script(src='https://code.jquery.com/jquery-3.5.1.min.js' integrity='sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=' crossorigin='anonymous')
    script(type='text/javascript' src='https://unpkg.com/acorn')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.11/paper-full.min.js' integrity='sha512-ehNJ9gpOQJn8EYlA3P1zUtfrh97G/6WNsjfPfpnMxbo6PX6UXHRj8Ny5MCd36w2eTPlvOSVuXLZmY+/VLVhI4A==' crossorigin='anonymous')
    script(src='CCapture.all.min.js')
    script(src='http://joeiddon.github.io/perlin/perlin.js')
    script(type='text/paperscript' canvas='canvas' src='wormpath.js')
    script(src="https://cdn.jsdelivr.net/npm/lodash@4.17.20/lodash.min.js" integrity="sha256-ur/YlHMU96MxHEsy3fHGszZHas7NzH4RQlD4tDVvFhw=" crossorigin="anonymous")
  body
    canvas#canvas(resize='' hidpi="off")
    img( src='images/imagepainter.png' id='imagepainter')
    img( src='images/depth-displace.png' id='depthMap')

    #progress
    button#export-button Export as SVG
    button#log-params Log params
    button#debug Debug
    

    #ui-tabs
        .tab(data-target="general").active   General
        .tab(data-target="brush") Brush
        .tab(data-target="lines-section") Lines
        .tab(data-target="effects") Effects
        .tab(data-target="text") Text
        .tab(data-target="stitch") Stitch
        .tab(data-target="noise") Noise
        .tab(data-target="zigzag") Zigzag
        .tab(data-target="spiral") Spiral
        .tab(data-target="hollow") Hollow
        .tab(data-target="anim") Animation

        .brand Wormpath 2021 by 
            a(href='https://www.instagram.com/jussijokinen/') Jussi Jokinen 
            | – 
            a(href='https://github.com/jokjus/Wormpath') Fork on Github
    #ui-row.inactive
        .ui-section#general.active
            //- .ui-section-label.section 
            //-     span General
             
                //- Select is populated programmatically from the presets.json 
            .drawingProperties
                +input('color', 'Bg color', 'drawingBgColor')
                +input('range', 'Scale:', 'drawingSize', 0, 20)
            +input('range', 'Density:', 'density', 0, 100)
            +section("Presets")
            .ui-control        
                label Preset:
                select.presetSelector#preset
            .ui-generic
                input#presetName(type='text' placeholder='Preset name')
                button#savePresets Save preset
            +section("Path")    
            .ui-generic
                button#reversePath Reverse path
            +section('Project')
            .projectSaving.ui-generic
                select#projectSelector
                button#loadProject Load project
            .projectSaving.ui-generic 
                input#projectName(type='text' placeholder='Project name')
                button#saveProjectAs Save project as… 
            .projectSaving.ui-generic
                button#saveProject Save


        div.ui-section#brush
            +select('Brush type:', 'bgType', [
                        {label: 'Square', value: 0},
                        {label: 'Double circle', value: 1, col: 'brushDoubleCircle'},
                        {label: 'Double diamond', value: 2},
                        {label: 'Cross', value: 3, col: 'brushCross'},
                        {label: 'Pyramid', value: 4},
                        {label: 'Bubble', value: 5, col: 'brushBubbleSize'},        
                        {label: 'Custom', value: 6, col: 'brushCustomSprite'},
                        {label: 'Leaves', value: 7, col: 'brushLeaves'},
                        {label: 'Noise', value: 8, col: 'brushNoise'},
                        {label: 'Circus', value: 9, col: 'brushCircus'},
                        {label: 'Image painter', value: 10, col: 'brushImagePainter'},                      
                        {label: 'Stripe', value: 11, col: 'brushStripe'},
                        {label: 'Depth map', value: 12, col: 'brushDepthMap'},
                    ], 'collapsibleTrigger')  
            div.collapseui#brushStripeCollapsible(style='display:none')
                +input('range', 'Stripes:', 'brushStripeCount', 0, 30)
                +input('range', 'Width:', 'brushStripeWidth', 0, 100)

            div.collapseui#brushCircusCollapsible(style='display:none')
                +input('range', 'Amount:', 'brushCircusAmount', 0, 50)
                +select('Type', 'brushCircusType', [
                    {label: 'Circle', value: 0},
                    {label: 'Square', value: 1}
                ])
                .ui-generic
                    button#brushCircusGenerate Generate
                +input('color', 'Color1', 'brushCircusC1')
                +input('checkbox', 'Lock 1', 'brushCircusLock1', 0, 0, 0)
                +input('color', 'Color2', 'brushCircusC2')
                +input('checkbox', 'Lock 2', 'brushCircusLock2', 0, 0, 0)
                +input('color', 'Color3', 'brushCircusC3')
                +input('checkbox', 'Lock 3', 'brushCircusLock3', 0, 0, 0)
                +input('color', 'Color4', 'brushCircusC4')
                +input('checkbox', 'Lock 4', 'brushCircusLock4', 0, 0, 0)
                +input('color', 'Color5', 'brushCircusC5')               
                +input('checkbox', 'Lock 5', 'brushCircusLock5', 0, 0, 0) 

            div.collapseui#brushNoiseCollapsible(style='display:none')
                +input('range', 'Noise amp:', 'brushNoiseAmp', 0, 100)
                +input('range', 'Noise freq:', 'brushNoiseFreq', 0, 100)
                +input('checkbox', 'Smooth', 'brushNoiseSmoothOn', 0, 0, 0)
                +input('range', 'Noise phase:', 'brushNoisePhase', 0, 100)
            
            div.collapseui#brushDepthMapCollapsible(style='display:none')
                +input('range', 'Depth amp:', 'brushDepthAmp', 0, 200)
                +input('range', 'Depth gamma:', 'brushDepthGamma', 0, 100)
                +input('range', 'Depth freq:', 'brushDepthFreq', 0, 100)
                +input('range', 'Depth resolution:', 'brushDepthResolution', 0, 500)
                +input('checkbox', 'Smooth', 'brushDepthSmoothOn', 0, 0, 0)
                +input('range', 'Hollow:', 'brushDepthHollow', 0, 100)

            div.collapseui#brushLeavesCollapsible(style='display:none')
                +input('range', 'Leaves:', 'brushLeavesAmount', 0, 50)
                +input('range', 'Size:', 'brushLeavesSize', 0, 100)         
                +input('range', 'Length:', 'brushLeavesLength', 0, 100)                

            div.collapseui#brushCustomSpriteCollapsible(style='display:none')
                .ui-generic
                    label Custom sprite SVG
                    input#uploadInput(type="file" name="myFile")
                +input('checkbox', 'Original colors', 'brushCustomSpriteOrigColors', 0, 0, 0)

            div.collapseui#brushDoubleCircleCollapsible(style='display:none')
                +input('range', 'Innercircle size', 'inCircleSize')
                +input('color', 'Innercircle color', 'inCircleColor')
                +input('range', 'Innercircle opacity', 'inCircleOpacity')
                +select('Brush color style:', 'inCircleBlendmode', [
                        {label: 'Normal', value: 'normal'},
                        {label: 'Add', value: 'add'},
                        {label: 'Screen', value: 'screen'},
                        {label: 'Multiply', value: 'multiply'},
                        {label: 'Color-dodge', value: 'color-dodge'},
                        {label: 'Darken', value: 'darker'},
                        {label: 'Overlay', value: 'overlay'},
                        {label: 'Soft light', value: 'soft-light'},
                        {label: 'Hard light', value: 'hard-light'}
                    ])
            div.collapseui#brushCrossCollapsible(style='display:none')
                +input('range', 'Cross Width:', 'brushCrossWidth')
            div.collapseui#brushBubbleSizeCollapsible(style='display:none')
                +input('range', 'Bubble size:', 'brushBubbleSize', 0, 100)
                +input('range', 'Bubbles:', 'brushBubbleAmount', 0, 50)
                +select('Brush type:', 'brushBubbleType', [
                        { label: 'Circle', value: 0 }, 
                        { label: 'Rectangle', value: 1 }
                    ])
                +input('checkbox', 'Intersect', 'brushBubbleIntersectOn', 0, 0, 0)
                +input('checkbox', 'Inner', 'brushBubbleInnerOn', 0, 0, 0)
                +input('color', 'Inner color', 'brushBubbleInnerColor')
                +input('range', 'Inner size', 'brushBubbleInnerSize', 0, 100)
                +input('range', 'Inner bubbles:', 'brushBubbleInnerAmount', 0, 50)
                +select('Inner brush type:', 'brushBubbleInnerType', [
                        { label: 'Circle', value: 0 }, 
                        { label: 'Rectangle', value: 1 }
                    ])
            div.collapseui#brushImagePainterCollapsible(style='display:none')
                +input('range', 'Resolution:', 'brushImagePainterResolution')
                +input('range', 'Horiz scale:', 'brushImagePainterHScale')
                +input('range', 'Vert scale:', 'brushImagePainterVScale')
                +select('Brush type:', 'brushImagePainterType', [
                    {label: 'Circle', value: 0},
                    {label: 'Line', value: 1}
                ])

            +input('range', 'Brush size:', 'size', 0, 400)
            +input('range', 'Rotation:', 'rotation', 0, 360)

            +section("Bg")
            +input('color', 'Brush Bg', 'bgColor')
            +input('range', 'Brush opacity', 'bgOpacity', 0, 100)

            +section("Stroke")
            +input('color', 'Brush stroke color', 'brushStrokeColor')
            +input('range', 'Brush stroke width', 'brushStrokeWidth', 0, 100)
            +input('range', 'Brush stroke opacity', 'brushStrokeOpacity', 0, 100)

            +section("Style")
            div.ui-control
                label Brush blend:
                select#brushBlend
                    option(value='normal' selected='') Normal
                    option(value='add') Add
                    option(value='screen') Screen
                    option(value='multiply') Multiply
                    option(value='color-dodge') Color-dodge
                    option(value='darker') Darken
                    option(value='overlay') Overlay
                    option(value='soft-light') Soft-light
                    option(value='hard-light') Hard-light
   
            +select('Brush color style:', 'bgStyle', [
                    {label: 'Default', value: 0},
                    {label: 'Unicorn', value: 1},
                    {label: 'None', value: 2},
                    {label: 'Gradient', value: 3, col: 'brushGradient'}], 
                    'collapsibleTrigger')

            .collapseui#brushGradientCollapsible(style='display:none')
                +input('color', 'Gradient color', 'brushGradientColor')
                +input('range', 'Transparency:', 'brushGradientTransparency', 0, 100)
                +select('Gradient type:', 'brushGradientType', [
                    {label: 'Radial', value: 1},
                    {label: 'Linear', value: 0}
                ])           
                +input('range', 'Balance:', 'brushGradientBalance', 0, 100)

            +select('Cap:', 'cap', [
                    {label: 'Filled', value: 0},
                    {label: 'Open', value: 1},
                    {label: 'Horizontal', value: 2},
                    {label: 'Vertical', value: 3},
                    {label: 'Pointed', value: 4},
                    {label: 'Dome', value: 5}
                ])                    
   
            +select('Brush effect:', 'bgEffect', [
                    {label: 'None', value: 0},
                    {label: 'Bulp', value: 1, col: 'bulb'}                    
                ], 'collapsibleTrigger')
            div.collapseui#bulbCollapsible(style='display:none')
                +input('range', 'Bulb amp:', 'bulbAmp', 0, 100)
                +input('range', 'Bulb freq:', 'bulbFreq', 0, 100)
        
        div.ui-section#lines-section
            +input('range', 'Lines:', 'lines', 0, 30)
            +input('range', 'Width:', 'lineWidth', 0, 40)
            +input('color', 'Line color', 'lineColor')
            +input('range', 'Line opacity', 'lineOpacity', 0, 100)
            +select('Style:', 'lineStyle', [
                {label: 'Default', value: 3},
                {label: 'Unicorn', value: 0},
                {label: 'Vertical', value: 4},
                {label: 'Horzontal', value: 5},
                {label: 'Wavy', value: 6, col:'wave'},
                {label: 'Spikes', value: 8, col:'spike'}],
                'collapsibleTrigger')
            

            div.collapseui#waveCollapsible(style='display:none')
                +input('range', 'Wave amp:', 'waveAmp', 0, 50)
                +input('range', 'Wave freq:', 'waveFreq', 0, 100)     
                +input('checkbox', 'Noise', 'waveNoiseOn',0 , 0, 0)
                +input('range', 'Noise offset', 'waveNoiseOffset', 0, 100)
                +input('range', 'Wave phase', 'wavePhase', 0, 100)
            div.collapseui#spikeCollapsible(style='display:none')
                +input('range', 'Spike amp:', 'spikeAmp', 0, 100)
                +input('range', 'Spike freq:', 'spikeFreq', 0, 100)

            +input('range', 'Fade:', 'fade', 0, 100)

        div.ui-section#effects
            +input('range', 'Shadow:', 'shadow', 0, 100)        
            +input('range', 'Twist:', 'twist', 0, 500)
            +input('range', 'Roundness:', 'corner', 0, 200)
            +input('range', 'Wedge:', 'wedge', 0, 100)
            +input('range', 'Last point wiggle:', 'lastPointWiggle', 0, 100)
            +input('range', 'Path completeness:', 'pathCompleteness', 0, 100)
            +input('range', 'Directional contrast:', 'directionalContrast', 0, 100)
            +input('range', 'LineShadow:', 'lineShadow', 0, 100)
            +input('range', 'Shadow distance:', 'lineShadowDistance', 0, 100)
            +input('range', 'Shadow offset:', 'lineShadowOffset', 0, 100)
            +input('checkbox', 'Shadow boolean (slow)', 'lineShadowBooleanOn', 0, 0, 0)


        div.ui-section#text
            +input('checkbox', 'Text', 'textOn', 0, 0, 0)
            +input('text', 'Text', 'textContent')
            +input('color', 'Text color', 'textColor')
            +input('color', 'Border color', 'textBorderColor')
            +input('range', 'Border width:', 'textBorderWidth', 0, 100)
            +input('range', 'Text size:', 'textSize', 0, 100)
            +input('range', 'Text spread:', 'textSpread', 0, 100)
            +input('range', 'Text pos:', 'textYPos', 0, 100)
            +input('range', 'Text bump:', 'textBump', 0, 100)
        
        div.ui-section#hollow
            +input('checkbox', 'Hollow', 'hollowOn', 0, 0, 0)
            +input('range', 'Hollow size', 'hollowSize', 0, 100)
            +select('Hollow type:', 'hollowType', [
                        {label: 'Rectangle', value: 0},
                        {label: 'Circle', value: 1}
                    ])   

        div.ui-section#stitch
            +input('checkbox', 'Stitch', 'stitchOn', 0, 0, 0)
            +input('text', 'Stitch content', 'stitchContent')
            +input('color', 'Stitch color1', 'stitchColor1')
            +input('range', 'Color1 opacity:', 'stitchColor1Opacity', 0, 100)
            +input('color', 'Stitch color2', 'stitchColor2')
            +input('range', 'Color2 opacity:', 'stitchColor2Opacity', 0, 100)
            +input('range', 'Stitch freq:', 'stitchFreq', 0, 100)        

        div.ui-section#noise
            +input('checkbox', 'Noise', 'noiseOn', 0, 0, 0)
            +input('checkbox', 'Angular', 'noiseAngularOn', 0, 0, 0)
            +input('range', 'Noise freq:', 'noiseFreq')    
            +input('range', 'Noise Amp:', 'noiseAmp', 0, 200) 
            +input('range', 'Noise Phase:', 'noisePhase', 0, 100)
            +input('range', 'Paths offset:', 'noisePathOffset', 0, 100)

        .ui-section#zigzag
            +input('checkbox', 'Zigzag:', 'pathZigZagOn', 0, 0, 0)
            +input('range', 'Zigzag amp:', 'pathZigzagAmp', 0, 100)    
            +input('range', 'Zigzag freq:', 'pathZigzagFreq', 0, 100)   

        .ui-section#spiral
            +input('checkbox', 'Spiral:', 'pathSpiralOn', 0, 0, 0)
            +input('range', 'Spiral amount:', 'pathSpiralAmount', 0, 100)  
            +input('checkbox', 'Direction:', 'pathSpiralDirection', 0, 0, 0)  
            +input('checkbox', 'Drawing direction:', 'pathSpiralDrawingDirection', 0, 0, 0)  

        .ui-section#anim
            div.anim-basic-control
                label Anim speed
                input#aSpeed(type='number' value=20)
            div.anim-control
                label Anim easing
                select#aEasing
                    option(value='flatForward') flatForward
                    option(value='sine') Sine
                    option(value='easeInOutCirc') easeInOutCirc
                    option(value='easeInOutElastic') easeInOutElastic
                    option(value='easeOutElastic') easeOutElastic
                    option(value='easeOutBounce') easeOutBounce
                    option(value='easeInOutExpo') easeInOutExpo
                    option(value='easeInBack') easeInBack
                    option(value='easeInExpo') easeInExpo
                    option(value='easeInOutBack') easeInOutBack
                    option(value='easeInQuart') easeInQuart

        
            mixin anim(label, id, min, max, name)
                .anim-control
                    label=label
                        
                    //- span.override(data-prop=name) OR
                    span.animated(data-prop=name class='active') AN
                    input(id=id+'Min', type='number', min=min, max=max value='')
                    span(id=id + 'MinVal')
                    input(id=id+'Max', type='number', min=min, max=max value='')
                    span(id=id + 'MaxVal')

            +anim('Rotation variation', 'aRotation', 0, 1000, 'rotation')
            +anim('Brush size variation', 'aBrushSize', 0, 1000, 'size')
            +anim('Twist variation', 'aTwist', 0, 500, 'twist')
            +anim('Bulb amp variation', 'aBulbAmp', 0, 100, 'bulbAmp')
            +anim('Bulb freq variation', 'aBulbFreq', 0, 100, 'bulbFreq')
            +anim('Noise phase', 'aNoisePhase', 0, 100, 'noisePhase')
            +anim('Noise amp', 'aNoiseAmp', 0, 100, 'noiseAmp')
            +anim('Noise freq', 'aNoiseFreq', 0, 100, 'noiseFreq')
            +anim('Wave phase', 'aWaveNoiseOffset', 0, 100, 'waveNoiseOffset')
            +anim('Path completeness', 'aPathCompleteness', 0, 100, 'pathCompleteness')
            +anim('Zigzag amplitude', 'aZigzagAmp', 0, 100, 'pathZigzagAmp')
            +anim('Spiral amount', 'aPathSpiralAmount', 0, 100, 'pathSpiralAmount')
            +anim('Brush noise phase', 'aBrushNoisePhase', 0, 100, 'brushNoisePhase')
            +anim('Wedge', 'aWedge', 0, 100, 'wedge')
                
            .anim-basic-control
                label Animation format
                select#aFormat
                    option(value='webm') WEBM
                    option(value='png') PNG
                    option(value='jpg') JPG
                    option(value='gif') GIF
            .anim-actions
                button#step-animation(type='button') Step forward
                button#start-animation(type='button') Start animation
                button#stop-animation(type='button') Stop animation
                button#start-capture(type='button') Start Capture
                button#stop-capture(type='button') Stop Capture
                //- .anim-control
                //-     label Rotation increment
                //-     input#aRotationInc(type='number' min='0' max='360' value='')